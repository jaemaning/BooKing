plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.booking'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.8")
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
//	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//restdocs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	//oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'

	// config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//zipkin
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '3.1.9'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-zipkin', version: '2.2.8.RELEASE'

	//fluentd
	implementation group: 'org.fluentd', name: 'fluent-logger', version: '0.3.4'
	implementation group: 'com.sndyuk', name: 'logback-more-appenders', version: '1.8.8'

	//actuator
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '3.1.0'
	//micrometer,prometheus
	implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.11.1'
	implementation group: 'io.micrometer', name: 'micrometer-core', version: '1.11.1'

	// r2dbc
	runtimeOnly group: 'org.mariadb', name: 'r2dbc-mariadb', version: '1.0.3'
	implementation group: 'io.r2dbc', name: 'r2dbc-pool', version: '1.0.1.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
	outputDir file('src/docs/asciidoc')
}
